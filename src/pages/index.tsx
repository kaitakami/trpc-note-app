import { useEffect } from "react";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import Loading from "../components/Loading";
import Nav from "../components/Nav";
import { api } from "../utils/api";


const Home: NextPage = () => {
  const { data: allNotes, isLoading } = api.note.allNotes.useQuery()

  const deleteNote = api.note.deleteNote.useMutation()
  useEffect(() => {
    console.log('rerender')
  }, [deleteNote])

  const handleClick = (type: string, id: string, e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {
    e.preventDefault()
    if (type === 'delete') {
      deleteNote.mutate({ id })
    }
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center bg-gradient-to-br from-slate-900 to-slate-800 text-white">
        <Nav />
        <div className=" md:max-w-4xl w-full pt-3 md:pt-48">
          <hr className="border-slate-600" />
          <div className="flex gap-3 md:gap-8 flex-col w-full text-left items-center p-2">
            <h2 className="p-8 font-bold">Todo List</h2>
            {isLoading && <Loading />}
            {!isLoading && !allNotes?.length && <div className="bg-gray-800 p-3 text-center rounded-md">Start by creating a note!</div>}
            {allNotes?.map(note => (
              <Link className="border rounded-md border-slate-500 w-full" key={note.id} href={note.id}>
                <h3 className="p-4">{note.title}</h3>
                <p className="px-4 truncate  text-slate-300">{note.description}</p>

                <div className="p-4 flex gap-3 justify-end w-full">
                  <button name="edit" className="p-1 rounded-md bg-gray-400">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6">
                      <path strokeLinecap="round" strokeLinejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10" />
                    </svg>
                  </button>
                  <button className="z-10 p-1 rounded-md text-red-300" onClick={(e) => handleClick('delete', note.id, e)}>
                    Delete
                  </button>
                </div>
              </Link>
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
